// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout should match.... 1`] = `
"<BrowserRouter>
  <Router basename={[undefined]} location={{...}} navigationType=\\"POP\\" navigator={{...}}>
    <Layout>
      <styled.div>
        <div className=\\"sc-gKclnd iHbEwV\\">
          <Header>
            <styled.div>
              <div className=\\"sc-jRQBWg jPddjv\\">
                <NavBar>
                  <styled.nav>
                    <nav className=\\"sc-hKwDye fwkzUq\\">
                      <ForwardRef(ButtonGroup) variant=\\"contained\\" aria-label=\\"outlined primary button group\\">
                        <MuiButtonGroupRoot as=\\"div\\" role=\\"group\\" className=\\"MuiButtonGroup-root MuiButtonGroup-contained\\" ownerState={{...}} aria-label=\\"outlined primary button group\\">
                          <Noop />
                          <div role=\\"group\\" className=\\"MuiButtonGroup-root MuiButtonGroup-contained css-zqcytf-MuiButtonGroup-root\\" aria-label=\\"outlined primary button group\\">
                            <ForwardRef(Button) onClick={[Function: onClick]} variant=\\"contained\\" disabled={true}>
                              <MuiButtonRoot ownerState={{...}} className=\\"MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary\\" component=\\"button\\" disabled={true} focusRipple={true} focusVisibleClassName=\\"\\" type={[undefined]} onClick={[Function: onClick]} disableRipple={false} classes={{...}}>
                                <Noop />
                                <ForwardRef(ButtonBase) className=\\"MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root\\" component=\\"button\\" disabled={true} focusRipple={true} focusVisibleClassName=\\"\\" type={[undefined]} onClick={[Function: onClick]} disableRipple={false} classes={{...}}>
                                  <MuiButtonBaseRoot as=\\"button\\" className=\\"MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root\\" ownerState={{...}} onBlur={[Function (anonymous)]} onClick={[Function: onClick]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={-1} type=\\"button\\" disabled={true} classes={{...}}>
                                    <Noop />
                                    <button className=\\"MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root\\" onBlur={[Function (anonymous)]} onClick={[Function: onClick]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={-1} type=\\"button\\" disabled={true}>
                                      Home
                                    </button>
                                  </MuiButtonBaseRoot>
                                </ForwardRef(ButtonBase)>
                              </MuiButtonRoot>
                            </ForwardRef(Button)>
                            <ForwardRef(Button) onClick={[Function: onClick]} variant=\\"contained\\" disabled={false}>
                              <MuiButtonRoot ownerState={{...}} className=\\"MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"\\" type={[undefined]} onClick={[Function: onClick]} disableRipple={false} classes={{...}}>
                                <Noop />
                                <ForwardRef(ButtonBase) className=\\"MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"\\" type={[undefined]} onClick={[Function: onClick]} disableRipple={false} classes={{...}}>
                                  <MuiButtonBaseRoot as=\\"button\\" className=\\"MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root\\" ownerState={{...}} onBlur={[Function (anonymous)]} onClick={[Function: onClick]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false} classes={{...}}>
                                    <Noop />
                                    <button className=\\"MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root\\" onBlur={[Function (anonymous)]} onClick={[Function: onClick]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false}>
                                      All News
                                      <ForwardRef(TouchRipple) center={false}>
                                        <MuiTouchRippleRoot className=\\"MuiTouchRipple-root\\">
                                          <Noop />
                                          <span className=\\"MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root\\">
                                            <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                                          </span>
                                        </MuiTouchRippleRoot>
                                      </ForwardRef(TouchRipple)>
                                    </button>
                                  </MuiButtonBaseRoot>
                                </ForwardRef(ButtonBase)>
                              </MuiButtonRoot>
                            </ForwardRef(Button)>
                            <ForwardRef(Button) id=\\"logoutButton\\" variant=\\"contained\\" onClick={[Function: handleClickLogout]}>
                              <MuiButtonRoot ownerState={{...}} className=\\"MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"\\" type={[undefined]} id=\\"logoutButton\\" onClick={[Function: handleClickLogout]} disableRipple={false} classes={{...}}>
                                <Noop />
                                <ForwardRef(ButtonBase) className=\\"MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"\\" type={[undefined]} id=\\"logoutButton\\" onClick={[Function: handleClickLogout]} disableRipple={false} classes={{...}}>
                                  <MuiButtonBaseRoot as=\\"button\\" className=\\"MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root\\" ownerState={{...}} onBlur={[Function (anonymous)]} onClick={[Function: handleClickLogout]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false} id=\\"logoutButton\\" classes={{...}}>
                                    <Noop />
                                    <button className=\\"MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root\\" onBlur={[Function (anonymous)]} onClick={[Function: handleClickLogout]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} onMouseDown={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]} onMouseUp={[Function (anonymous)]} onDragLeave={[Function (anonymous)]} onTouchEnd={[Function (anonymous)]} onTouchMove={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} tabIndex={0} type=\\"button\\" disabled={false} id=\\"logoutButton\\">
                                      Log out
                                      <ForwardRef(TouchRipple) center={false}>
                                        <MuiTouchRippleRoot className=\\"MuiTouchRipple-root\\">
                                          <Noop />
                                          <span className=\\"MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root\\">
                                            <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                                          </span>
                                        </MuiTouchRippleRoot>
                                      </ForwardRef(TouchRipple)>
                                    </button>
                                  </MuiButtonBaseRoot>
                                </ForwardRef(ButtonBase)>
                              </MuiButtonRoot>
                            </ForwardRef(Button)>
                          </div>
                        </MuiButtonGroupRoot>
                      </ForwardRef(ButtonGroup)>
                    </nav>
                  </styled.nav>
                </NavBar>
              </div>
            </styled.div>
          </Header>
          <styled.div>
            <div className=\\"sc-iCfMLu lkSrtN\\">
              <Outlet />
            </div>
          </styled.div>
          <Footer>
            <styled.div>
              <div className=\\"sc-bdvvtL cjbcZU\\">
                <styled.div>
                  <div className=\\"sc-gsDKAQ gpLSln\\">
                    <styled.strong>
                      <strong className=\\"sc-dkPtRN eHRfMh\\">
                        All Rights Reserved, 
                        2022
                      </strong>
                    </styled.strong>
                  </div>
                </styled.div>
              </div>
            </styled.div>
          </Footer>
        </div>
      </styled.div>
    </Layout>
  </Router>
</BrowserRouter>"
`;

exports[`Layout test should render correctly 1`] = `ShallowWrapper {}`;
